{"version":3,"file":"main.js","sources":["../../scripts/main.js"],"sourcesContent":["import '../styles/all.scss'\nimport fs from './shaders/ashima.fs'\nimport vs from './shaders/ashima.vs'\n\n// get mouse position for GL uniform\nfunction getRelativeMousePosition(event, target) {\n  target = target || event.target;\n  var rect = target.getBoundingClientRect();\n\n  return {\n    x: event.clientX - rect.left,\n    y: event.clientY - rect.top,\n  }\n}\n\n// assumes target or event.target is canvas\nfunction getNoPaddingNoBorderCanvasRelativeMousePosition(event, target) {\n  target = target || event.target;\n  var pos = getRelativeMousePosition(event, target);\n\n  pos.x = pos.x * target.width  / target.clientWidth;\n  pos.y = pos.y * target.height / target.clientHeight;\n\n  return pos;\n}\n\n// init webgl\nlet top = 0\nconst mousePos = {x: 0, y: 0};\nconst arrays = {\n  position: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\n};\n\nconst canvas = document.querySelector(\".shader\");\nconst gl = canvas.getContext(\"webgl\");\nconst programInfo = twgl.createProgramInfo(gl, [vs, fs]);\nconst bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\nconst textures = twgl.createTextures(gl, {\n  noise: { src: \"/images/noise.png\", mag: gl.NEAREST },\n  ashima1: { src: \"/images/ashima1.png\" },\n  ashima2: { src: \"/images/ashima2.png\" }\n});\n\ngl.useProgram(programInfo.program);\ntwgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n\nwindow.uniforms = {\n  u_texture: textures.noise,\n  u_ashima1: textures.ashima1,\n  u_ashima2: textures.ashima2,\n  // u_option_knob: 0.5,\n  // u_option_size: 0.5,\n  // u_option_layers: 0.16,\n  // u_option_stroke: 0.2,\n  // u_option_spread: 0.1,\n  // u_option_fade: 0.625,\n  // u_option_edge: 0.6875,\n  // u_option_noise: 0.2,\n  // u_option_noise_size: 0.5,\n  // u_option_speed: 0.05,\n  // u_option_blend: 0.05,\n};\n\nfunction render(time) {\n  requestAnimationFrame(render);\n\n  if (top > canvas.height) return;\n\n  uniforms.u_time = time;\n\n  twgl.setUniforms(programInfo, uniforms);\n  twgl.drawBufferInfo(gl, bufferInfo);\n}\n\nrequestAnimationFrame(render);\n\n// attach listener for resizing the canvas\nfunction resize() {\n  canvas.width  = canvas.clientWidth;\n  canvas.height = canvas.clientHeight;\n  uniforms.u_resolution = [canvas.width, canvas.height];\n  twgl.resizeCanvasToDisplaySize(canvas, 1); //use window.devicePixelRatio if you want retina, we might not though...\n  gl.viewport(0, 0, canvas.width, canvas.height);\n}\n\nresize();\n\nwindow.addEventListener('resize', resize);\n\n// attach listener for updating mouse position uniform\nfunction mousemove (e) {\n  const pos = getNoPaddingNoBorderCanvasRelativeMousePosition(e, canvas);\n  // pos is in pixel coordinates for the canvas.\n  // so convert to WebGL clip space coordinates\n  const x = pos.x / canvas.width  *  2 - 1;\n  const y = pos.y / canvas.height * -2 + 1;\n\n  mousePos.x = -0.02; // x;\n  mousePos.y = 0.015; // y;\n\n  uniforms.u_mouse = [mousePos.x, mousePos.y];\n}\n\nwindow.addEventListener('mousemove', mousemove);\n\n// attach listener for disable render on scroll\nfunction scroll (e) {\n  var doc = document.documentElement; //IE with doctype\n  doc = doc.clientHeight ? doc : document.body;\n  top = doc.scrollTop\n}\n\nwindow.addEventListener('scroll', scroll)\n\n// attach listener for loading the editor with the tilde key\n// function keydown (e) {\n//   if (e.keyCode === 192) {\n//     var script = document.createElement('script')\n//     script.src = '/scripts/editor.js'\n//     document.body.appendChild(script)\n//     window.removeEventListener('keydown', keydown)\n//   }\n// }\n\n// window.addEventListener('keydown', keydown)"],"names":["render","time","requestAnimationFrame","top","canvas","height","uniforms","u_time","twgl","setUniforms","programInfo","drawBufferInfo","gl","bufferInfo","resize","width","clientWidth","clientHeight","u_resolution","resizeCanvasToDisplaySize","viewport","position","noise","src","mag","NEAREST","ashima1","ashima2","useProgram","program","setBuffersAndAttributes","window","u_texture","textures","u_ashima1","u_ashima2","addEventListener","mousemove","e","target","getBoundingClientRect","x","y","u_mouse","scroll","doc","document","documentElement","body","scrollTop"],"mappings":"yBA+DAA,QAASA,EAAM,CAACC,CAAD,CAAO,CACpBC,qBAAA,CAAsBF,CAAtB,CAEIG,EAAJ,CAAUC,CAAAC,OAAV,GAEAC,QAAAC,OAGA,CAHkBN,CAGlB,CADAO,IAAAC,YAAA,CAAiBC,CAAjB,CAA8BJ,QAA9B,CACA,CAAAE,IAAAG,eAAA,CAAoBC,CAApB,CAAwBC,CAAxB,CALA,CAHoB,CActBC,QAASA,EAAM,EAAG,CAChBV,CAAAW,MAAA,CAAgBX,CAAAY,YAChBZ,EAAAC,OAAA,CAAgBD,CAAAa,aAChBX,SAAAY,aAAA,CAAwB,CAACd,CAAAW,MAAD,CAAeX,CAAAC,OAAf,CACxBG,KAAAW,0BAAA,CAA+Bf,CAA/B,CAAuC,CAAvC,CACAQ,EAAAQ,SAAA,CAAY,CAAZ,CAAe,CAAf,CAAkBhB,CAAAW,MAAlB,CAAgCX,CAAAC,OAAhC,CALgB,CAlDlB,IAAIF,EAAM,CACS,KAAA,EAAA,CAAA,CAAM,EAAA,CAKzB,wCAAA,wBAAA,4BAE6C,wEAAA;s+EAAA,EAF7C;qCAHEkB,SAAU,CAAE,EAAF,CAAM,EAAN,CAAS,CAAT,CAAY,CAAZ,CAAgB,EAAhB,CAAmB,CAAnB,CAAuB,EAAvB,CAA0B,CAA1B,CAA6B,CAA7B,CAAiC,EAAjC,CAAoC,CAApC,CAAuC,CAAvC,CAA0C,CAA1C,CAA8C,EAA9C,CAAiD,CAAjD,CAAoD,CAApD,CAAuD,CAAvD,CAA0D,CAA1D,GAGZ,yBAIuC,CACrCC,MAAO,CAAEC,IAAK,mBAAP,CAA4BC,IAAKZ,CAAAa,QAAjC,CAD8B,CAErCC,QAAS,CAAEH,IAAK,qBAAP,CAF4B,CAGrCI,QAAS,CAAEJ,IAAK,qBAAP,CAH4B,EAMvCX,EAAAgB,WAAA,CAAclB,CAAAmB,QAAd,CACArB,KAAAsB,wBAAA,CAA6BlB,CAA7B,CAAiCF,CAAjC,CAA8CG,CAA9C,CAEAkB,OAAAzB,SAAA,CAAkB,CAChB0B,UAAWC,CAAAX,MADK,CAEhBY,UAAWD,CAAAP,QAFK,CAGhBS,UAAWF,CAAAN,QAHK,CA4BlBzB,sBAAA,CAAsBF,CAAtB,CAWAc,EAAA,EAEAiB,OAAAK,iBAAA,CAAwB,QAAxB,CAAkCtB,CAAlC,CAgBAiB,OAAAK,iBAAA,CAAwB,WAAxB,CAbAC,SAAoBC,EAAG,CACwClC,IAAAA,EAAAA,CArF7DmC,EAAA,EAWAA,CAXA,CAWSA,CAXT;CAWmBA,OAXnB,IAAmBA,OACRA,EAAAC,sBAAA,EA0FXC,EAAA,CAAc,IACdC,EAAA,CAAa,IAEbpC,SAAAqC,QAAA,CAAmB,CAACF,CAAD,CAAaC,CAAb,CAVE,CAavB,CASAX,OAAAK,iBAAA,CAAwB,QAAxB,CANAQ,SAAiBN,EAAG,CACdO,CAAAA,CAAMC,QAAAC,gBACVF,EAAA,CAAMA,CAAA5B,aAAA,CAAmB4B,CAAnB,CAAyBC,QAAAE,KAC/B7C,EAAA,CAAM0C,CAAAI,UAHY,CAMpB;"}