{"id":"Fseb","dependencies":[{"name":"/Users/wilsonlewis/Code/quarter/website/package.json","includedInParent":true,"mtime":1562605585849},{"name":"/Users/wilsonlewis/Code/quarter/website/.babelrc","includedInParent":true,"mtime":1562229805576},{"name":"/Users/wilsonlewis/Code/quarter/website/node_modules/lodash/package.json","includedInParent":true,"mtime":1562230912564},{"name":"./_baseGetTag","loc":{"line":1,"column":25},"parent":"/Users/wilsonlewis/Code/quarter/website/node_modules/lodash/_baseIsArguments.js","resolved":"/Users/wilsonlewis/Code/quarter/website/node_modules/lodash/_baseGetTag.js"},{"name":"./isObjectLike","loc":{"line":2,"column":27},"parent":"/Users/wilsonlewis/Code/quarter/website/node_modules/lodash/_baseIsArguments.js","resolved":"/Users/wilsonlewis/Code/quarter/website/node_modules/lodash/isObjectLike.js"}],"generated":{"js":"var e=require(\"./_baseGetTag\"),r=require(\"./isObjectLike\"),t=\"[object Arguments]\";function u(u){return r(u)&&e(u)==t}module.exports=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":2,"column":0},"generated":{"line":1,"column":31}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":2,"column":0},"generated":{"line":1,"column":33}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":2,"column":0},"generated":{"line":1,"column":41}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":5,"column":0},"generated":{"line":1,"column":59}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":5,"column":0},"generated":{"line":1,"column":61}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":14,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":14,"column":0},"generated":{"line":1,"column":91}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":14,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":15,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":15,"column":0},"generated":{"line":1,"column":103}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":15,"column":0},"generated":{"line":1,"column":105}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":15,"column":0},"generated":{"line":1,"column":109}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":15,"column":0},"generated":{"line":1,"column":111}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":15,"column":0},"generated":{"line":1,"column":115}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":18,"column":0},"generated":{"line":1,"column":117}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":18,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../node_modules/lodash/_baseIsArguments.js","original":{"line":18,"column":0},"generated":{"line":1,"column":132}}],"sources":{"../../../node_modules/lodash/_baseIsArguments.js":"var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n"},"lineCount":null}},"error":null,"hash":"d1900c2c6e7064b439ed1774d903c28a","cacheData":{"env":{}}}